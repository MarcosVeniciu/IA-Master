// Mocks generated by Mockito 5.4.6 from annotations
// in ai_master/test/controllers/main_screen_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:ai_master/models/adventure.dart' as _i5;
import 'package:ai_master/models/chat_message.dart' as _i6;
import 'package:ai_master/models/scenario.dart' as _i9;
import 'package:ai_master/repositories/adventure_repository.dart' as _i3;
import 'package:ai_master/services/app_preferences.dart' as _i11;
import 'package:ai_master/services/navigation_service.dart' as _i10;
import 'package:ai_master/services/scenario_loader.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:uuid/data.dart' as _i13;
import 'package:uuid/uuid.dart' as _i12;
import 'package:uuid/uuid_value.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUuidValue_0 extends _i1.SmartFake implements _i2.UuidValue {
  _FakeUuidValue_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [AdventureRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdventureRepository extends _i1.Mock
    implements _i3.AdventureRepository {
  MockAdventureRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> saveAdventure(_i5.Adventure? adventure) =>
      (super.noSuchMethod(
            Invocation.method(#saveAdventure, [adventure]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateAdventure(_i5.Adventure? adventure) =>
      (super.noSuchMethod(
            Invocation.method(#updateAdventure, [adventure]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i5.Adventure?> getAdventure(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getAdventure, [id]),
            returnValue: _i4.Future<_i5.Adventure?>.value(),
          )
          as _i4.Future<_i5.Adventure?>);

  @override
  _i4.Future<List<_i5.Adventure>> getAllAdventures() =>
      (super.noSuchMethod(
            Invocation.method(#getAllAdventures, []),
            returnValue: _i4.Future<List<_i5.Adventure>>.value(
              <_i5.Adventure>[],
            ),
          )
          as _i4.Future<List<_i5.Adventure>>);

  @override
  _i4.Future<void> deleteAdventure(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAdventure, [id]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> saveChatMessage(_i6.ChatMessage? message) =>
      (super.noSuchMethod(
            Invocation.method(#saveChatMessage, [message]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.ChatMessage>> getChatMessagesForAdventure(
    String? adventureId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getChatMessagesForAdventure, [adventureId]),
            returnValue: _i4.Future<List<_i6.ChatMessage>>.value(
              <_i6.ChatMessage>[],
            ),
          )
          as _i4.Future<List<_i6.ChatMessage>>);

  @override
  _i4.Future<_i5.Adventure?> getFullAdventure(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getFullAdventure, [id]),
            returnValue: _i4.Future<_i5.Adventure?>.value(),
          )
          as _i4.Future<_i5.Adventure?>);
}

/// A class which mocks [ScenarioLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockScenarioLoader extends _i1.Mock implements _i7.ScenarioLoader {
  MockScenarioLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get scenariosFolderPath =>
      (super.noSuchMethod(
            Invocation.getter(#scenariosFolderPath),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.getter(#scenariosFolderPath),
            ),
          )
          as String);

  @override
  _i4.Future<List<_i9.Scenario>> loadScenarios() =>
      (super.noSuchMethod(
            Invocation.method(#loadScenarios, []),
            returnValue: _i4.Future<List<_i9.Scenario>>.value(<_i9.Scenario>[]),
          )
          as _i4.Future<List<_i9.Scenario>>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i10.NavigationService {
  MockNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void goToAdventure(String? adventureId) => super.noSuchMethod(
    Invocation.method(#goToAdventure, [adventureId]),
    returnValueForMissingStub: null,
  );

  @override
  void goToNewAdventure(String? adventureId) => super.noSuchMethod(
    Invocation.method(#goToNewAdventure, [adventureId]),
    returnValueForMissingStub: null,
  );

  @override
  void goToInstructions() => super.noSuchMethod(
    Invocation.method(#goToInstructions, []),
    returnValueForMissingStub: null,
  );

  @override
  void goToSubscription() => super.noSuchMethod(
    Invocation.method(#goToSubscription, []),
    returnValueForMissingStub: null,
  );

  @override
  void goBack() => super.noSuchMethod(
    Invocation.method(#goBack, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AppPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppPreferences extends _i1.Mock implements _i11.AppPreferences {
  MockAppPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isFirstLaunch() =>
      (super.noSuchMethod(
            Invocation.method(#isFirstLaunch, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<void> setFirstLaunchCompleted() =>
      (super.noSuchMethod(
            Invocation.method(#setFirstLaunchCompleted, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [Uuid].
///
/// See the documentation for Mockito's code generation for more information.
class MockUuid extends _i1.Mock implements _i12.Uuid {
  MockUuid() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String v1({Map<String, dynamic>? options, _i13.V1Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v1, [], {#options: options, #config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v1, [], {#options: options, #config: config}),
            ),
          )
          as String);

  @override
  List<int> v1buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i13.V1Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v1buffer,
              [buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v1obj({
    Map<String, dynamic>? options,
    _i13.V1Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#v1obj, [], {#options: options, #config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v1obj, [], {
                #options: options,
                #config: config,
              }),
            ),
          )
          as _i2.UuidValue);

  @override
  String v4({Map<String, dynamic>? options, _i13.V4Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v4, [], {#options: options, #config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v4, [], {#options: options, #config: config}),
            ),
          )
          as String);

  @override
  List<int> v4buffer(
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i13.V4Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v4buffer,
              [buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v4obj({
    Map<String, dynamic>? options,
    _i13.V4Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#v4obj, [], {#options: options, #config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v4obj, [], {
                #options: options,
                #config: config,
              }),
            ),
          )
          as _i2.UuidValue);

  @override
  String v5(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i13.V5Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5,
              [namespace, name],
              {#options: options, #config: config},
            ),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(
                #v5,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
          )
          as String);

  @override
  List<int> v5buffer(
    String? namespace,
    String? name,
    List<int>? buffer, {
    Map<String, dynamic>? options,
    _i13.V5Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5buffer,
              [namespace, name, buffer],
              {#options: options, #config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v5obj(
    String? namespace,
    String? name, {
    Map<String, dynamic>? options,
    _i13.V5Options? config,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v5obj,
              [namespace, name],
              {#options: options, #config: config},
            ),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(
                #v5obj,
                [namespace, name],
                {#options: options, #config: config},
              ),
            ),
          )
          as _i2.UuidValue);

  @override
  String v6({_i13.V6Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v6, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v6, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v6buffer(
    List<int>? buffer, {
    _i13.V6Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v6buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v6obj({_i13.V6Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v6obj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v6obj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);

  @override
  String v7({_i13.V7Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v7, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v7, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v7buffer(
    List<int>? buffer, {
    _i13.V7Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v7buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v7obj({_i13.V7Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v7obj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v7obj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);

  @override
  String v8({_i13.V8Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v8, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v8buffer(
    List<int>? buffer, {
    _i13.V8Options? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v8buffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v8obj({_i13.V8Options? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8obj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v8obj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);

  @override
  String v8g({_i13.V8GenericOptions? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8g, [], {#config: config}),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#v8g, [], {#config: config}),
            ),
          )
          as String);

  @override
  List<int> v8gbuffer(
    List<int>? buffer, {
    _i13.V8GenericOptions? config,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #v8gbuffer,
              [buffer],
              {#config: config, #offset: offset},
            ),
            returnValue: <int>[],
          )
          as List<int>);

  @override
  _i2.UuidValue v8gobj({_i13.V8GenericOptions? config}) =>
      (super.noSuchMethod(
            Invocation.method(#v8gobj, [], {#config: config}),
            returnValue: _FakeUuidValue_0(
              this,
              Invocation.method(#v8gobj, [], {#config: config}),
            ),
          )
          as _i2.UuidValue);
}
